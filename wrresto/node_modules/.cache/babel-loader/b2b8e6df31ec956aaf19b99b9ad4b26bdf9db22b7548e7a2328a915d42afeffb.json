{"ast":null,"code":"var _jsxFileName = \"C:\\\\wrresto\\\\src\\\\components\\\\Menu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useLayoutEffect } from \"react\";\nimport \"./Menu.css\";\nimport gsap from \"gsap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = () => {\n  _s();\n  const firstText = useRef(null);\n  const secondText = useRef(null);\n  const slider = useRef(null);\n  let xPercent = 0;\n  let direction = -1;\n  useLayoutEffect(() => {\n    gsap.to(slider.current, {\n      x: \"-100%\",\n      // Move the slider to the left\n      duration: 10,\n      // Duration of the slide\n      repeat: -1,\n      // Repeat indefinitely\n      ease: \"linear\"\n    });\n    requestAnimationFrame(animate);\n  }, []);\n  const animate = () => {\n    if (xPercent < -100) {\n      xPercent = 0;\n    } else if (xPercent > 0) {\n      xPercent = -100;\n    }\n    gsap.set(firstText.current, {\n      xPercent: xPercent\n    });\n    gsap.set(secondText.current, {\n      xPercent: xPercent\n    });\n    requestAnimationFrame(animate);\n    xPercent += 0.1 * direction;\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"menu\",\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sliderContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: slider,\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          ref: firstText,\n          children: \"OUR MENU \\u2022 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          ref: secondText,\n          children: \"OUR MENU \\u2022 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Menu, \"qqByD7i/SjCYShMrTIZoDIiCqvM=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useRef","useLayoutEffect","gsap","jsxDEV","_jsxDEV","Menu","_s","firstText","secondText","slider","xPercent","direction","to","current","x","duration","repeat","ease","requestAnimationFrame","animate","set","id","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/wrresto/src/components/Menu.jsx"],"sourcesContent":["import React, { useRef, useLayoutEffect } from \"react\";\r\nimport \"./Menu.css\";\r\nimport gsap from \"gsap\";\r\n\r\nconst Menu = () => {\r\n  const firstText = useRef(null);\r\n  const secondText = useRef(null);\r\n  const slider = useRef(null);\r\n  let xPercent = 0;\r\n  let direction = -1;\r\n\r\n  useLayoutEffect(() => {\r\n    gsap.to(slider.current, {\r\n      x: \"-100%\", // Move the slider to the left\r\n      duration: 10, // Duration of the slide\r\n      repeat: -1, // Repeat indefinitely\r\n      ease: \"linear\",\r\n    });\r\n\r\n    requestAnimationFrame(animate);\r\n  }, []);\r\n\r\n  const animate = () => {\r\n    if (xPercent < -100) {\r\n      xPercent = 0;\r\n    } else if (xPercent > 0) {\r\n      xPercent = -100;\r\n    }\r\n    gsap.set(firstText.current, { xPercent: xPercent });\r\n    gsap.set(secondText.current, { xPercent: xPercent });\r\n    requestAnimationFrame(animate);\r\n    xPercent += 0.1 * direction;\r\n  };\r\n\r\n  return (\r\n    <section id=\"menu\" className=\"menu\">\r\n      <div className=\"sliderContainer\">\r\n        <div ref={slider} className=\"slider\">\r\n          <p ref={firstText}>OUR MENU • </p>\r\n          <p ref={secondText}>OUR MENU • </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"menu-grid\">{/* Your menu grid content */}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,eAAe,QAAQ,OAAO;AACtD,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMQ,UAAU,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMS,MAAM,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC3B,IAAIU,QAAQ,GAAG,CAAC;EAChB,IAAIC,SAAS,GAAG,CAAC,CAAC;EAElBV,eAAe,CAAC,MAAM;IACpBC,IAAI,CAACU,EAAE,CAACH,MAAM,CAACI,OAAO,EAAE;MACtBC,CAAC,EAAE,OAAO;MAAE;MACZC,QAAQ,EAAE,EAAE;MAAE;MACdC,MAAM,EAAE,CAAC,CAAC;MAAE;MACZC,IAAI,EAAE;IACR,CAAC,CAAC;IAEFC,qBAAqB,CAACC,OAAO,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIT,QAAQ,GAAG,CAAC,GAAG,EAAE;MACnBA,QAAQ,GAAG,CAAC;IACd,CAAC,MAAM,IAAIA,QAAQ,GAAG,CAAC,EAAE;MACvBA,QAAQ,GAAG,CAAC,GAAG;IACjB;IACAR,IAAI,CAACkB,GAAG,CAACb,SAAS,CAACM,OAAO,EAAE;MAAEH,QAAQ,EAAEA;IAAS,CAAC,CAAC;IACnDR,IAAI,CAACkB,GAAG,CAACZ,UAAU,CAACK,OAAO,EAAE;MAAEH,QAAQ,EAAEA;IAAS,CAAC,CAAC;IACpDQ,qBAAqB,CAACC,OAAO,CAAC;IAC9BT,QAAQ,IAAI,GAAG,GAAGC,SAAS;EAC7B,CAAC;EAED,oBACEP,OAAA;IAASiB,EAAE,EAAC,MAAM;IAACC,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjCnB,OAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BnB,OAAA;QAAKoB,GAAG,EAAEf,MAAO;QAACa,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBAClCnB,OAAA;UAAGoB,GAAG,EAAEjB,SAAU;UAAAgB,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClCxB,OAAA;UAAGoB,GAAG,EAAEhB,UAAW;UAAAe,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNxB,OAAA;MAAKkB,SAAS,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAACtB,EAAA,CAzCID,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AA2CV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}